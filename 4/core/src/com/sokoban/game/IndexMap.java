package com.sokoban.game;

import com.badlogic.gdx.math.GridPoint2;

public final class IndexMap {
    public final GridPoint2 playerPosition;
    public final GridPoint2 flagPosition;
    public final int[][] indexMap = new int[DynamicMap.SIZE.y][DynamicMap.SIZE.x]; // Coords must be reversed

    private IndexMap(GridPoint2 playerPosition, GridPoint2 flagPosition, int[][] indexMap) {
        this.playerPosition = playerPosition;
        this.flagPosition = flagPosition;
        for (int i = 0; i < DynamicMap.SIZE.y; i++) {
            for (int j = 0; j < DynamicMap.SIZE.x; j++) {
                if (i < indexMap.length && j < indexMap[i].length)
                    this.indexMap[i][j] = indexMap[i][j];
                else
                    this.indexMap[i][j] = 0;
            }
        }
    }

    public static final IndexMap MAP_ONE() {
        int[][] indexMap = {
                { 0, 0, 0, 0, 0, 0, 0, 0, 3, 2 },
                { 0, 1, 1, 0, 3, 5, 3, 0, 6, 8 },
                { 0, 1, 1, 0, 0, 3, 1, 0, 0, 0 },
                { 0, 0, 0, 6, 0, 0, 1, 0, 0, 0 },
                { 0, 11, 0, 0, 1, 1, 1, 1, 0, 0 },
                { 0, 0, 0, 0, 0, 1, 1, 0, 0, 13 },
                { 6, 0, 1, 3, 0, 0, 0, 1, 0, 0 },
                { 0, 6, 1, 1, 0, 0, 13, 1, 1, 0 },
                { 0, 0, 1, 0, 3, 3, 0, 1, 0, 1 },
                { 2, 1, 1, 0, 3, 0, 0, 5, 13, 1 },
        };

        return new IndexMap(new GridPoint2(2, 7), new GridPoint2(7, 2), indexMap);
    }

    public static final IndexMap MAP_TWO() {
        int[][] indexMap = {
                { 0, 9, 0, 7, 0, 8, 0, 0, 0, 1, 10, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 },
                { 6, 1, 1, 14, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 8, 0, 0 },
                { 6, 0, 0, 12, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 7, 7, 1, 1, 0 },
                { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 1, 0, 0, 0, 0, 1 },
                { 6, 0, 0, 0, 13, 0, 0, 0, 0, 8, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 },
                { 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 11, 1 },
                { 1, 0, 3, 1, 3, 5, 0, 1, 1, 3, 3, 2, 0, 1, 1, 0, 0, 0, 11, 1 },
                { 1, 7, 1, 1, 1, 6, 0, 0, 0, 9, 0, 0, 0, 1, 0, 1, 0, 10, 1, 1 },
                { 1, 0, 3, 1, 3, 7, 0, 0, 0, 8, 0, 0, 1, 0, 0, 1, 0, 0, 12, 1 },
                { 0, 0, 0, 1, 6, 0, 6, 0, 0, 0, 0, 1, 0, 0, 10, 0, 0, 0, 12, 1 },
                { 0, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1 },
                { 1, 1, 0, 1, 8, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0 },
                { 0, 1, 0, 1, 0, 6, 0, 0, 1, 6, 0, 0, 12, 0, 1, 0, 0, 0, 0, 0 },
                { 0, 1, 1, 1, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 8, 0, 0, 1, 7, 6, 0, 1, 0, 13, 0, 0, 0, 13, 0, 0, 0, 1, 1, 0 },
                { 0, 0, 0, 1, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 9, 0, 1, 0, 0 },
                { 5, 0, 0, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 },
                { 0, 4, 0, 1, 3, 2, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 3, 0, 0 },
        };

        return new IndexMap(new GridPoint2(8, 2), new GridPoint2(2, 7), indexMap);
    }

    public static final IndexMap MAP_THREE() {
        int[][] indexMap = {
                { 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0 },
                { 8, 0, 0, 0, 0, 0, 0, 1, 1, 14, 13, 13, 7, 0, 0, 0, 0, 0, 0, 0 },
                { 8, 0, 7, 0, 0, 0, 9, 0, 10, 0, 0, 0, 0, 7, 1, 6, 4, 3, 3, 3 },
                { 0, 0, 0, 7, 8, 8, 1, 0, 11, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
                { 0, 2, 0, 0, 7, 7, 0, 8, 11, 7, 7, 6, 6, 6, 0, 0, 0, 0, 0, 0 },
                { 0, 3, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 4, 0, 0, 1, 0, 0, 0 },
                { 0, 3, 0, 9, 12, 1, 11, 0, 9, 9, 0, 8, 0, 0, 5, 0, 5, 0, 0, 0 },
                { 0, 0, 0, 14, 12, 0, 0, 0, 0, 3, 1, 8, 0, 0, 3, 0, 5, 0, 0, 0 },
                { 12, 1, 13, 0, 12, 0, 0, 0, 3, 1, 1, 1, 7, 11, 3, 0, 5, 0, 0, 0 },
                { 1, 1, 2, 0, 2, 3, 3, 14, 4, 1, 1, 1, 7, 0, 2, 0, 4, 0, 1, 0 },
                { 0, 1, 0, 0, 0, 12, 0, 0, 4, 1, 1, 1, 7, 0, 0, 0, 0, 0, 1, 10 },
                { 0, 1, 1, 1, 0, 0, 0, 1, 0, 4, 5, 5, 0, 0, 5, 0, 0, 8, 1, 11 },
                { 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 9, 0, 0, 0, 4, 0, 0, 0, 1, 0 },
                { 0, 8, 7, 0, 0, 0, 9, 0, 10, 0, 0, 8, 0, 7, 1, 6, 4, 1, 1, 3 },
                { 0, 0, 0, 7, 8, 0, 1, 0, 11, 0, 0, 11, 1, 1, 1, 0, 0, 0, 0, 0 },
                { 0, 2, 0, 0, 7, 0, 10, 0, 11, 7, 7, 6, 6, 6, 0, 0, 0, 0, 0, 1 },
                { 0, 3, 0, 9, 10, 1, 1, 1, 1, 1, 1, 1, 0, 4, 0, 0, 0, 0, 1, 1 },
                { 0, 3, 0, 9, 12, 1, 11, 0, 9, 9, 0, 8, 0, 0, 5, 1, 0, 0, 1, 0 },
                { 3, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 3, 0, 1, 0, 1, 1, 1, 0 },
                { 3, 0, 1, 0, 0, 0, 0, 6, 1, 1, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0 },
        };

        return new IndexMap(new GridPoint2(1, 1), new GridPoint2(8, 8), indexMap);
    }

    public static final IndexMap MAP_FOUR() {
        int[][] indexMap = {
                { 0, 0, 0, 0, 0, 0, 0, 0, 3, 2 },
                { 0, 1, 1, 0, 3, 13, 3, 0, 6, 8 },
                { 0, 1, 1, 0, 0, 12, 1, 0, 0, 0 },
                { 0, 0, 1, 6, 0, 0, 1, 0, 0, 0 },
                { 0, 10, 0, 0, 1, 1, 1, 1, 0, 0 },
                { 0, 0, 0, 0, 0, 1, 1, 0, 0, 14 },
                { 6, 5, 0, 4, 0, 0, 0, 1, 0, 0 },
                { 0, 6, 0, 1, 0, 0, 13, 1, 1, 0 },
                { 11, 0, 1, 0, 2, 3, 0, 1, 0, 1 },
                { 2, 1, 1, 0, 0, 0, 0, 5, 13, 1 },
        };

        return new IndexMap(new GridPoint2(3, 2), new GridPoint2(5, 9), indexMap);
    }

    public static final IndexMap MAP_FIVE() {
        int[][] indexMap = {
                { 0, 0, 0, 0, 0, 0, 0, 0, 3, 2 },
                { 0, 1, 1, 0, 3, 0, 3, 0, 6, 0 },
                { 0, 1, 1, 0, 0, 1, 1, 0, 0, 0 },
                { 1, 0, 1, 6, 0, 0, 0, 0, 0, 0 },
                { 1, 10, 0, 0, 1, 0, 1, 1, 0, 0 },
                { 0, 5, 0, 0, 0, 1, 1, 0, 0, 14 },
                { 1, 2, 6, 4, 0, 0, 0, 1, 0, 0 },
                { 0, 3, 0, 1, 0, 0, 1, 1, 1, 0 },
                { 7, 0, 1, 0, 2, 3, 0, 1, 0, 1 },
                { 2, 1, 1, 0, 0, 7, 0, 5, 13, 1 },
        };

        return new IndexMap(new GridPoint2(4, 5), new GridPoint2(1, 8), indexMap);
    }

    public static final IndexMap MAP_SIX() {
        int[][] indexMap = {
                { 0, 7, 18, 12, 15, 0, 25, 18, 0, 13 },
                { 9, 12, 20, 21, 15, 13, 0, 16, 1, 14 },
                { 0, 1, 9, 2, 4, 22, 24, 8, 16, 2 },
                { 20, 14, 24, 10, 6, 7, 12, 9, 1, 0 },
                { 11, 0, 2, 19, 5, 24, 0, 19, 0, 25 },
                { 8, 12, 8, 8, 15, 25, 7, 8, 24, 23 },
                { 7, 22, 15, 5, 9, 23, 12, 0, 5, 20 },
                { 11, 15, 10, 6, 7, 21, 3, 13, 2, 10 },
                { 22, 12, 5, 7, 14, 21, 7, 10, 1, 4 },
                { 12, 11, 12, 4, 2, 2, 13, 18, 4, 3 },
        };

        return new IndexMap(new GridPoint2(4, 4), new GridPoint2(2, 8), indexMap);
    }

    public static final IndexMap MAP_SEVEN() {
        int[][] indexMap = {
                { 12, 30, 11, 9, 1, 9, 35, 18, 20, 15 },
                { 34, 10, 14, 12, 0, 0, 21, 10, 30, 13 },
                { 18, 15, 35, 34, 19, 20, 29, 6, 7, 10 },
                { 12, 25, 17, 32, 31, 28, 13, 20, 17, 32 },
                { 32, 30, 16, 1, 16, 35, 6, 10, 30, 7 },
                { 15, 21, 12, 14, 25, 1, 3, 35, 35, 31 },
                { 15, 25, 1, 8, 21, 4, 28, 29, 9, 3 },
                { 7, 16, 6, 29, 30, 34, 23, 9, 35, 8 },
                { 20, 5, 34, 19, 19, 14, 11, 4, 15, 2 },
                { 34, 19, 35, 30, 13, 5, 11, 30, 33, 2 },
        };

        return new IndexMap(new GridPoint2(1, 4), new GridPoint2(8, 5), indexMap);
    }

    public static final IndexMap MAP_EIGHT() {
        int[][] indexMap = {
                { 2, 17, 31, 8, 11, 28, 5, 22, 30, 4 },
                { 14, 17, 13, 30, 32, 18, 10, 5, 18, 9 },
                { 4, 24, 32, 17, 8, 34, 1, 23, 14, 25 },
                { 29, 23, 7, 28, 11, 1, 2, 33, 30, 7 },
                { 17, 14, 29, 6, 2, 23, 1, 14, 23, 24 },
                { 12, 16, 3, 4, 27, 16, 17, 7, 1, 13 },
                { 2, 12, 10, 32, 28, 27, 1, 4, 11, 31 },
                { 24, 13, 11, 6, 12, 18, 1, 8, 13, 32 },
                { 28, 16, 14, 25, 11, 8, 17, 25, 30, 30 },
                { 30, 30, 35, 24, 15, 20, 35, 8, 28, 28 },
        };

        return new IndexMap(new GridPoint2(1, 0), new GridPoint2(8, 5), indexMap);
    }

    public static final IndexMap MAP_NINE() {
        int[][] indexMap = {
                { 27, 28, 29, 32, 11, 24, 2, 4, 17, 5 },
                { 7, 34, 16, 31, 18, 15, 2, 25, 4, 24 },
                { 19, 16, 17, 18, 16, 27, 7, 21, 30, 33 },
                { 26, 7, 32, 24, 35, 9, 29, 3, 23, 0 },
                { 7, 1, 25, 7, 7, 12, 9, 15, 35, 12 },
                { 4, 25, 20, 6, 17, 6, 15, 34, 19, 12 },
                { 33, 11, 32, 30, 1, 1, 2, 29, 19, 28 },
                { 27, 26, 14, 24, 32, 1, 27, 3, 31, 8 },
                { 17, 1, 32, 25, 35, 1, 1, 17, 22, 35 },
                { 2, 30, 21, 5, 2, 27, 4, 7, 34, 7 },
        };

        return new IndexMap(new GridPoint2(8, 5), new GridPoint2(2, 8), indexMap);
    }

    public static final IndexMap MAP_TEN() {
        int[][] indexMap = {
                { 2, 23, 29, 30, 28, 14, 26, 18, 15, 21 },
                { 17, 22, 1, 25, 9, 17, 10, 5, 23, 35 },
                { 0, 2, 1, 1, 28, 35, 30, 26, 19, 16 },
                { 11, 22, 19, 1, 1, 33, 24, 19, 18, 23 },
                { 11, 6, 31, 20, 6, 0, 25, 35, 31, 35 },
                { 17, 11, 6, 11, 13, 4, 17, 27, 18, 11 },
                { 10, 20, 10, 31, 29, 2, 21, 15, 19, 11 },
                { 28, 21, 0, 11, 29, 29, 10, 25, 19, 33 },
                { 28, 3, 4, 7, 20, 13, 23, 5, 17, 12 },
                { 21, 22, 35, 30, 20, 4, 15, 18, 0, 24 },
        };

        return new IndexMap(new GridPoint2(2, 5), new GridPoint2(8, 0), indexMap);
    }

    static GridPoint2 toIndexMapPoint(GridPoint2 point) {
        return new GridPoint2(DynamicMap.SIZE.y - 1 - point.y, point.x);
    }
}
