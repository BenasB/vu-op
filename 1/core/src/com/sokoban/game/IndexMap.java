package com.sokoban.game;

import com.badlogic.gdx.math.GridPoint2;

public final class IndexMap {
    public final GridPoint2 playerPosition;
    public final GridPoint2 flagPosition;
    public final int[][] indexMap = new int[DynamicMap.SIZE.y][DynamicMap.SIZE.x]; // Coords must be reversed

    private IndexMap(GridPoint2 playerPosition, GridPoint2 flagPosition, int[][] indexMap) {
        this.playerPosition = playerPosition;
        this.flagPosition = flagPosition;
        for (int i = 0; i < DynamicMap.SIZE.y; i++) {
            for (int j = 0; j < DynamicMap.SIZE.x; j++) {
                if (i < indexMap.length && j < indexMap[i].length)
                    this.indexMap[i][j] = indexMap[i][j];
                else
                    this.indexMap[i][j] = 0;
            }
        }
    }

    public static final IndexMap MAP_ONE() {
        int[][] indexMap = {
                { 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1 },
                { 0, 1, 1, 0, 3, 5, 3, 0, 6, 8, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1 },
                { 0, 1, 1, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0 },
                { 0, 0, 0, 6, 0, 0, 1, 0, 0, 0, 3, 0, 1, 1, 1, 1, 0, 0, 0, 1 },
                { 0, 11, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 1, 1, 0, 0, 13, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
                { 6, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0 },
                { 0, 6, 1, 1, 0, 0, 13, 0, 0, 0, 1, 8, 0, 0, 12, 0, 0, 1, 0, 7 },
                { 0, 0, 1, 0, 3, 3, 0, 0, 0, 1, 1, 0, 0, 0, 0, 10, 0, 1, 0, 0 },
                { 2, 1, 1, 0, 3, 0, 0, 5, 13, 1, 1, 1, 0, 0, 1, 1, 1, 7, 1, 0 },
                { 0, 6, 0, 0, 0, 0, 0, 0, 13, 6, 1, 1, 0, 12, 0, 0, 1, 1, 0, 7 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0 },
                { 14, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 7, 0, 0, 7, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 8, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 14, 0, 0, 0, 0, 0, 7, 10, 0, 1, 1, 0, 0, 0, 0, 0, 3, 0, 2, 0 },
                { 0, 0, 0, 0, 8, 0, 0, 10, 0, 0, 0, 0, 0, 0, 1, 0, 3, 1, 2, 0 },
                { 0, 0, 12, 11, 0, 0, 10, 0, 0, 0, 0, 0, 0, 1, 1, 5, 1, 1, 1, 0 },
                { 0, 7, 0, 1, 1, 1, 1, 0, 11, 11, 11, 0, 0, 10, 1, 1, 1, 1, 1, 0 },
                { 6, 0, 1, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 1, 6, 1, 1, 1, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 1, 0, 8, 9, 2, 0 },
        };

        return new IndexMap(new GridPoint2(2, 17), new GridPoint2(17, 2), indexMap);
    }

    public static final IndexMap MAP_TWO() {
        int[][] indexMap = {
                { 0, 9, 0, 7, 0, 8, 0, 0, 0, 1, 10, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 },
                { 6, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 8, 0, 0 },
                { 6, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 7, 7, 1, 1, 0 },
                { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 1, 0, 0, 0, 0, 1 },
                { 6, 0, 0, 0, 13, 0, 0, 0, 0, 8, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 },
                { 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 11, 1 },
                { 1, 0, 3, 1, 3, 5, 0, 9, 1, 3, 3, 2, 0, 1, 1, 0, 0, 0, 11, 1 },
                { 1, 7, 1, 1, 1, 6, 0, 0, 0, 9, 0, 0, 0, 1, 0, 1, 0, 10, 1, 1 },
                { 1, 0, 3, 1, 3, 7, 0, 0, 0, 8, 0, 0, 1, 0, 0, 1, 0, 0, 12, 1 },
                { 0, 0, 0, 1, 6, 0, 6, 0, 0, 0, 0, 1, 0, 0, 10, 0, 0, 0, 12, 1 },
                { 0, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1 },
                { 1, 1, 0, 1, 8, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0 },
                { 0, 1, 0, 1, 0, 6, 0, 0, 1, 6, 0, 0, 12, 0, 1, 0, 0, 0, 0, 0 },
                { 0, 1, 1, 1, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                { 8, 0, 0, 1, 7, 6, 0, 1, 0, 13, 0, 0, 0, 13, 0, 0, 0, 1, 1, 0 },
                { 0, 0, 0, 1, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 9, 0, 1, 0, 0 },
                { 5, 0, 0, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 },
                { 0, 4, 0, 1, 3, 2, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 3, 0, 0 },
        };

        return new IndexMap(new GridPoint2(18, 10), new GridPoint2(3, 10), indexMap);
    }

    public static final IndexMap MAP_THREE() {
        int[][] indexMap = {
                { 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0 },
                { 8, 0, 0, 0, 0, 0, 0, 0, 12, 14, 13, 13, 7, 0, 0, 0, 0, 0, 0, 0 },
                { 8, 0, 7, 0, 0, 0, 9, 0, 10, 0, 0, 0, 0, 7, 1, 6, 4, 3, 3, 3 },
                { 0, 0, 0, 7, 8, 8, 1, 0, 11, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
                { 0, 2, 0, 0, 7, 7, 10, 8, 11, 7, 7, 6, 6, 6, 0, 0, 0, 0, 0, 0 },
                { 0, 3, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 4, 0, 0, 1, 0, 0, 0 },
                { 0, 3, 0, 9, 12, 1, 11, 0, 9, 9, 0, 8, 0, 0, 5, 0, 5, 0, 0, 0 },
                { 0, 0, 0, 14, 12, 0, 0, 0, 0, 3, 1, 8, 0, 0, 3, 0, 5, 0, 0, 0 },
                { 12, 11, 13, 0, 12, 0, 0, 0, 3, 1, 1, 1, 7, 11, 3, 0, 5, 0, 0, 0 },
                { 1, 1, 2, 0, 2, 3, 3, 14, 4, 1, 1, 1, 7, 0, 2, 0, 4, 0, 1, 0 },
                { 0, 1, 0, 0, 0, 12, 0, 0, 4, 1, 1, 1, 7, 0, 0, 0, 0, 0, 1, 10 },
                { 0, 1, 1, 1, 0, 0, 0, 1, 0, 4, 5, 5, 0, 0, 5, 0, 0, 8, 1, 11 },
                { 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 9, 0, 0, 0, 4, 0, 0, 0, 1, 0 },
                { 0, 8, 7, 0, 0, 0, 9, 0, 10, 0, 0, 8, 0, 7, 1, 6, 4, 1, 1, 3 },
                { 0, 0, 0, 7, 8, 0, 1, 0, 11, 0, 0, 11, 1, 1, 1, 0, 0, 0, 0, 0 },
                { 0, 2, 0, 0, 7, 0, 10, 0, 11, 7, 7, 6, 6, 6, 0, 0, 0, 0, 0, 1 },
                { 0, 3, 0, 9, 10, 1, 1, 1, 1, 1, 1, 1, 0, 4, 0, 0, 0, 0, 1, 1 },
                { 0, 3, 0, 9, 12, 1, 11, 0, 9, 9, 0, 8, 0, 0, 5, 1, 0, 0, 1, 0 },
                { 3, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 3, 0, 1, 0, 1, 1, 1, 0 },
                { 3, 0, 1, 0, 0, 0, 0, 6, 1, 1, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0 },
        };

        return new IndexMap(new GridPoint2(1, 1), new GridPoint2(10, 10), indexMap);
    }

    static GridPoint2 toIndexMapPoint(GridPoint2 point) {
        return new GridPoint2(DynamicMap.SIZE.y - 1 - point.y, point.x);
    }
}
